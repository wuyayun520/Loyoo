name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub upgrade
          
       # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
#       添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"
      # 打印 Xcode 版本信息
      - name: Print Xcode Version
        run: |
          xcodebuild -version
          echo "Xcode Path: $(xcode-select -p)"
          swift --version
          
      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 123456
          
          provisioning-profile-base64: MII1CQYJKoZIhvcNAQcCoII0+jCCNPYCAQExCzAJBgUrDgMCGgUAMIIlFgYJKoZIhvcNAQcBoIIlBwSCJQM8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCI/Pgo8IURPQ1RZUEUgcGxpc3QgUFVCTElDICItLy9BcHBsZS8vRFREIFBMSVNUIDEuMC8vRU4iICJodHRwOi8vd3d3LmFwcGxlLmNvbS9EVERzL1Byb3BlcnR5TGlzdC0xLjAuZHRkIj4KPHBsaXN0IHZlcnNpb249IjEuMCI+CjxkaWN0PgoJPGtleT5BcHBJRE5hbWU8L2tleT4KCTxzdHJpbmc+dW5yZXN0cmFpbjwvc3RyaW5nPgoJPGtleT5BcHBsaWNhdGlvbklkZW50aWZpZXJQcmVmaXg8L2tleT4KCTxhcnJheT4KCTxzdHJpbmc+N0o0OTZaNDM1Njwvc3RyaW5nPgoJPC9hcnJheT4KCTxrZXk+Q3JlYXRpb25EYXRlPC9rZXk+Cgk8ZGF0ZT4yMDI1LTAxLTIyVDAzOjEyOjQ5WjwvZGF0ZT4KCTxrZXk+UGxhdGZvcm08L2tleT4KCTxhcnJheT4KCQk8c3RyaW5nPmlPUzwvc3RyaW5nPgoJCTxzdHJpbmc+eHJPUzwvc3RyaW5nPgoJCTxzdHJpbmc+dmlzaW9uT1M8L3N0cmluZz4KCTwvYXJyYXk+Cgk8a2V5PklzWGNvZGVNYW5hZ2VkPC9rZXk+Cgk8ZmFsc2UvPgoJPGtleT5EZXZlbG9wZXJDZXJ0aWZpY2F0ZXM8L2tleT4KCTxhcnJheT4KCQk8ZGF0YT5NSUlGc1RDQ0JKbWdBd0lCQWdJUUtSdFoxWS9OVjV2T0tSN0g5TGgxWWpBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSTFNREV5TWpBeU16a3dPVm9YRFRJMk1ERXlNakF5TXprd09Gb3dnWXd4R2pBWUJnb0praWFKay9Jc1pBRUJEQW8zU2pRNU5sbzBNelUyTVRZd05BWURWUVFEREMxcFVHaHZibVVnUkdsemRISnBZblYwYVc5dU9pQmFkVzlxYVdGdVp5QklkU0FvTjBvME9UWmFORE0xTmlreEV6QVJCZ05WQkFzTUNqZEtORGsyV2pRek5UWXhGREFTQmdOVkJBb01DMXAxYjJwcFlXNW5JRWgxTVFzd0NRWURWUVFHRXdKRFRqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxPRVY0bTh4bWdSQ3I2RXYvQkVhWlJGdUZPTWlQanBqNXB2NGxPNW8vVnpIdGFnMXNzbGIxZStYWVA3UmtFVExGZ2N2RzB0MXdvMXZNNmRaTG5jUXd3OVBYaGlBYUp1NFozc3BnZUNtdzN6b3J4YVFaSzhmUGF5aHBRTHdkQm90WU5GRWxzaHpsRXRLdjVSbERrakZOMWk5YithbEp6OGMzTWdZSy93VnlpaFJrRkxrOHk2blhoakhrVkZLZ2J5eWF2WUZnR3llbis2SVJ5bnpldk5KdmErUG5yWDlhOVV1UWxaYUNCU0VsajNuS1BvbXNwdGtzbEhLc1p3Y2lqbDYwNk1memVTUjF3NFR1cCs3L0g1cDd6TkpFYzJ1MzNXS2M3M1Z4TGNDSzVNMjcyS0tmaWJZV0VHeTlWdkhFMS95bkt6RWg2Vld3dUNLbmZqMlZXUnhVY0NBd0VBQWFPQ0FpTXdnZ0lmTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVQ2Y3QUZaRDVyMlFLa2hLNUppaGpESmZzcDdJd2NBWUlLd1lCQlFVSEFRRUVaREJpTUMwR0NDc0dBUVVGQnpBQ2hpRm9kSFJ3T2k4dlkyVnlkSE11WVhCd2JHVXVZMjl0TDNkM1pISm5NeTVrWlhJd01RWUlLd1lCQlFVSE1BR0dKV2gwZEhBNkx5OXZZM053TG1Gd2NHeGxMbU52YlM5dlkzTndNRE10ZDNka2NtY3pNREl3Z2dFZUJnTlZIU0FFZ2dFVk1JSUJFVENDQVEwR0NTcUdTSWIzWTJRRkFUQ0IvekNCd3dZSUt3WUJCUVVIQWdJd2diWU1nYk5TWld4cFlXNWpaU0J2YmlCMGFHbHpJR05sY25ScFptbGpZWFJsSUdKNUlHRnVlU0J3WVhKMGVTQmhjM04xYldWeklHRmpZMlZ3ZEdGdVkyVWdiMllnZEdobElIUm9aVzRnWVhCd2JHbGpZV0pzWlNCemRHRnVaR0Z5WkNCMFpYSnRjeUJoYm1RZ1kyOXVaR2wwYVc5dWN5QnZaaUIxYzJVc0lHTmxjblJwWm1sallYUmxJSEJ2YkdsamVTQmhibVFnWTJWeWRHbG1hV05oZEdsdmJpQndjbUZqZEdsalpTQnpkR0YwWlcxbGJuUnpMakEzQmdnckJnRUZCUWNDQVJZcmFIUjBjSE02THk5M2QzY3VZWEJ3YkdVdVkyOXRMMk5sY25ScFptbGpZWFJsWVhWMGFHOXlhWFI1THpBV0JnTlZIU1VCQWY4RUREQUtCZ2dyQmdFRkJRY0RBekFkQmdOVkhRNEVGZ1FVVTNvZ1FBc1lvNUllbmE4b1FHYzRMdzkzMWdvd0RnWURWUjBQQVFIL0JBUURBZ2VBTUJNR0NpcUdTSWIzWTJRR0FRUUJBZjhFQWdVQU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQU00c3Y0L2pkd2liUlN2TGJ0azRQRXJrMVhYVHpDTnRTWHhTandqa2l5WXlYbUhMMHUvbkVKd1ZsRUI3eEYzRHk3U2FSUjd6TmF3V2lldk8yQzNIVXIzWmQyQVliaHFLcDNneWRBWUNvcWhDbStZTlB3SVF2Tk1YRDAyaTZaQmFGZ3YvN0RLeVB4a0lwekNJOENiTmtuaGdvZXQ3bWtkWFJTdGxkLzBTUUowWUtTM0FoTUdha29xbTJZa3M0RHozazE3UHJvWk01cnVwcmhhR2UzTXFRclUrVWtabWZ1bjQyVmVqclZlMks3OWM3bU9sOUtPZGc2ZDlxQU9EUkI5ZUxtMU9Ub2tYN1c4V0g3RWtUS01ibTJKSjhwdGJOT2ppOUdZZzg3S0VlSWJsVFl6bjNHWkJ6TnBqQWcxc3Y2T1pTRW5pUm42VkZDa3NRQnc4Zy9pMUovPC9kYXRhPgoJPC9hcnJheT4KCgk8a2V5PkRFUi1FbmNvZGVkLVByb2ZpbGU8L2tleT4KCTxkYXRhPk1JSU8yd1lKS29aSWh2Y05BUWNDb0lJT3pEQ0NEc2dDQVFFeER6QU5CZ2xnaGtnQlpRTUVBZ0VGQURDQ0JKWUdDU3FHU0liM0RRRUhBYUNDQkljRWdnU0RNWUlFZnpBTURBZFdaWEp6YVc5dUFnRUJNQTBNQ0ZCUVVVTm9aV05yQVFFQU1CQU1DbFJwYldWVWIweHBkbVVDQWdGc01CTU1Ea2x6V0dOdlpHVk5ZVzVoWjJWa0FRRUFNQllNQkU1aGJXVU1EblZ1Y21WemRISmhhVzVmWkdsek1CY01DRlJsWVcxT1lXMWxEQXRhZFc5cWFXRnVaeUJJZFRBWERBbEJjSEJKUkU1aGJXVU1DblZ1Y21WemRISmhhVzR3SFF3TVEzSmxZWFJwYjI1RVlYUmxGdzB5TlRBeE1qSXdNekV5TkRsYU1CNE1EbFJsWVcxSlpHVnVkR2xtYVdWeU1Bd01DamRLTkRrMldqUXpOVFl3SHd3T1JYaHdhWEpoZEdsdmJrUmhkR1VYRFRJMk1ERXlNakF5TXprd09Gb3dJQXdYVUhKdlptbHNaVVJwYzNSeWFXSjFkR2x2YmxSNWNHVU1CVk5VVDFKRk1DRU1DRkJzWVhSbWIzSnRNQlVNQTJsUFV3d0VlSEpQVXd3SWRtbHphVzl1VDFNd0t3d2JRWEJ3YkdsallYUnBiMjVKWkdWdWRHbG1hV1Z5VUhKbFptbDRNQXdNQ2pkS05EazJXalF6TlRZd0xBd0VWVlZKUkF3a1pqazBPRGc0WmpNdE1EWXlNeTAwT1RSbExXRm1Oemt0WkRVNFlqWTRZV014TjJaak1Ec01GVVJsZG1Wc2IzQmxja05sY25ScFptbGpZWFJsY3pBaUJDQ1BFUUtqejRaQ29aNU44S0ZnQlhqSklYOFpsWVRNZ0RaemE5TElGZG1MMVRDQ0FyQU1ERVZ1ZEdsMGJHVnRaVzUwYzNDQ0FwNENBUUd3Z2dLWE1EZ01GbUZ3Y0d4cFkyRjBhVzl1TFdsa1pXNTBhV1pwWlhJTUhqZEtORGsyV2pRek5UWXVZMjl0TG5WdWNtVnpkSEpoYVc0dU5qWTNOekFkREE5aGNITXRaVzUyYVhKdmJtMWxiblFNQ25CeWIyUjFZM1JwYjI0d0dBd1RZbVYwWVMxeVpYQnZjblJ6TFdGamRHbDJaUUVCL3pBc0RCOWpiMjB1WVhCd2JHVXVaR1YyWld4dmNHVnlMbUZ3Y0d4bGMybG5ibWx1TUFrTUIwUmxabUYxYkhRd0t3d21ZMjl0TG1Gd2NHeGxMbVJsZG1Wc2IzQmxjaTVoYzNOdlkybGhkR1ZrTFdSdmJXRnBibk1NQVNvd1pnd3lZMjl0TG1Gd2NHeGxMbVJsZG1Wc2IzQmxjaTV1WlhSM2IzSnJhVzVuTG5Oc2FXTnBibWN1WVhCd1kyRjBaV2R2Y25rd01Bd1NZMjl0YlhWdWFXTmhkR2x2YmkwNU1EQXdEQXBuWVcxbGN5MDJNREUwREE1emRISmxZVzFwYm1jdE9UQXdNVENCckF3MlkyOXRMbUZ3Y0d4bExtUmxkbVZzYjNCbGNpNXVaWFIzYjNKcmFXNW5Mbk5zYVdOcGJtY3VkSEpoWm1acFkyTmhkR1ZuYjNKNU1ISU1EbVJsWm1GMWJIUnpiR2xqWlMweERBZDJhV1JsYnkweURBeGlZV05yWjNKdmRXNWtMVE1NQjNadmFXTmxMVFFNRDJOaGJHeHphV2R1WVd4cGJtY3ROUXdRY21WemNHOXVjMmwyWldSaGRHRXROZ3dOWVhaemRISmxZVzFwYm1jdE53d09jbVZ6Y0c5dWMybDJaV0YyTFRnd0xRd29ZMjl0TG1Gd2NHeGxMbVJsZG1Wc2IzQmxjaTV1WlhSM2IzSnJhVzVuTG5kcFpta3RhVzVtYndFQi96QXhEQ05qYjIwdVlYQndiR1V1WkdWMlpXeHZjR1Z5TG5SbFlXMHRhV1JsYm5ScFptbGxjZ3dLTjBvME9UWmFORE0xTmpBVERBNW5aWFF0ZEdGemF5MWhiR3h2ZHdFQkFEQTVEQlpyWlhsamFHRnBiaTFoWTJObGMzTXRaM0p2ZFhCek1COE1ERGRLTkRrMldqUXpOVFl1S2d3UFkyOXRMbUZ3Y0d4bExuUnZhMlZ1b0lJSVBEQ0NBa013Z2dISm9BTUNBUUlDQ0MzRi9JalN4VXVWTUFvR0NDcUdTTTQ5QkFNRE1HY3hHekFaQmdOVkJBTU1Fa0Z3Y0d4bElGSnZiM1FnUTBFZ0xTQkhNekVtTUNRR0ExVUVDd3dkUVhCd2JHVWdRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEhreEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERURTBNRFF6TURFNE1Ua3dObG9YRFRNNU1EUXpNREU0TVRrd05sb3daekViTUJrR0ExVUVBd3dTUVhCd2JHVWdVbTl2ZENCRFFTQXRJRWN6TVNZd0pBWURWUVFMREIxQmNIQnNaU0JEWlhKMGFXWnBZMkYwYVc5dUlFRjFkR2h2Y21sMGVURVRNQkVHQTFVRUNnd0tRWEJ3YkdVZ1NXNWpMakVMTUFrR0ExVUVCaE1DVlZNd2RqQVFCZ2NxaGtqT1BRSUJCZ1VyZ1FRQUlnTmlBQVNZNlM4OVFIS2s3Wk1pY29FVEhOMFFsZkhGbzA1eDNCUVcyUTdscGdVcWQyUjdYMDQ0MDdzY1JMVi85UisyTW1KZHllbUVXMDh3VHhGYUFQMVlXQXlsOVE4c1RRZEhFM1hhbDVlWGJ6RmM3U3VkZXlBNzJMbFUyVjZacERwUkNqR2pRakJBTUIwR0ExVWREZ1FXQkJTN3NONmhXRE9JbXFTS21kNit2ZXV2MnNza3F6QVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQi93UUVBd0lCQmpBS0JnZ3Foa2pPUFFRREF3Tm9BREJsQWpFQWcrbkJ4QlplR2wwMEdObnQ3L1JzRGdCR1M3amZza1lSeFEvOTVucU1vYVpyenNJRDFKejFrOFowdUdyZnFpTVZBakJ0Wm9vUXl0UU4xRS9OalVNK3RJcGpwVE51NDIzYUY3ZGtIOGhUSnZtSVluUTVDeGRieTFHb0RPZ1lBK2Vpc2lnd2dnTG1NSUlDYmFBREFnRUNBZ2d6RGU3NHYweG9MakFLQmdncWhrak9QUVFEQXpCbk1Sc3dHUVlEVlFRRERCSkJjSEJzWlNCU2IyOTBJRU5CSUMwZ1J6TXhKakFrQmdOVkJBc01IVUZ3Y0d4bElFTmxjblJwWm1sallYUnBiMjRnUVhWMGFHOXlhWFI1TVJNd0VRWURWUVFLREFwQmNIQnNaU0JKYm1NdU1Rc3dDUVlEVlFRR0V3SlZVekFlRncweE56QXlNakl5TWpJek1qSmFGdzB6TWpBeU1UZ3dNREF3TURCYU1ISXhKakFrQmdOVkJBTU1IVUZ3Y0d4bElGTjVjM1JsYlNCSmJuUmxaM0poZEdsdmJpQkRRU0EwTVNZd0pBWURWUVFMREIxQmNIQnNaU0JEWlhKMGFXWnBZMkYwYVc5dUlFRjFkR2h2Y21sMGVURVRNQkVHQTFVRUNnd0tRWEJ3YkdVZ1NXNWpMakVMTUFrR0ExVUVCaE1DVlZNd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRR2E2UldiMzJmSjlIT05vNlNHMWJOVkRaa1NzbVVhSm42eVNCKzR2VllEOXppYXVzWlJ5OHU3enVrQWJRQkUwUjhXaWF0b0p3cEpZcmw1Z1p2VDN4YW80SDNNSUgwTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SHdZRFZSMGpCQmd3Rm9BVXU3RGVvVmd6aUpxa2lwbmV2cjNycjlyTEpLc3dSZ1lJS3dZQkJRVUhBUUVFT2pBNE1EWUdDQ3NHQVFVRkJ6QUJoaXBvZEhSd09pOHZiMk56Y0M1aGNIQnNaUzVqYjIwdmIyTnpjREF6TFdGd2NHeGxjbTl2ZEdOaFp6TXdOd1lEVlIwZkJEQXdMakFzb0NxZ0tJWW1hSFIwY0RvdkwyTnliQzVoY0hCc1pTNWpiMjB2WVhCd2JHVnliMjkwWTJGbk15NWpjbXd3SFFZRFZSME9CQllFRkhwSHVqaUtGU1JJSWtiTnZvOGFKSHMwQXlwcE1BNEdBMVVkRHdFQi93UUVBd0lCQmpBUUJnb3Foa2lHOTJOa0JnSVJCQUlGQURBS0JnZ3Foa2pPUFFRREF3Tm5BREJrQWpBVkRLbU94cStXYVd1bm45MWMxQU5aYks1UzFHREdpM2JndDhXaThRbDg0SnJqYTdIamZESEVKM3Fuam9uOXEzY0NNR0V6SVBFcC8vbUhNcTRweUdROWRudFJwTklDTDNhK1lDS1I4ZFU2ZGR5MDRzWXFsdjdHQ2R4S1Q5VWs4UHpLc2pDQ0F3Y3dnZ0t0b0FNQ0FRSUNDRnl0SmlRVEdBVy9NQW9HQ0NxR1NNNDlCQU1DTUhJeEpqQWtCZ05WQkFNTUhVRndjR3hsSUZONWMzUmxiU0JKYm5SbFozSmhkR2x2YmlCRFFTQTBNU1l3SkFZRFZRUUxEQjFCY0hCc1pTQkRaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwZVRFVE1CRUdBMVVFQ2d3S1FYQndiR1VnU1c1akxqRUxNQWtHQTFVRUJoTUNWVk13SGhjTk1qUXdNVEk1TVRZME56QTBXaGNOTWpnd01qSTNNVFkwTnpBeldqQk9NU293S0FZRFZRUUREQ0ZYVjBSU0lGQnliM1pwYzJsdmJtbHVaeUJRY205bWFXeGxJRk5wWjI1cGJtY3hFekFSQmdOVkJBb01Da0Z3Y0d4bElFbHVZeTR4Q3pBSkJnTlZCQVlUQWxWVE1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXhBNFR3OCt1OFJBdmZ2VlUyMVJyaEFjZjQrWW5FS2gxVm9wVStRR3VmeVBGRW9Cd0MrOXJqQyt6cVE1OUFWb0xTaldBR2hnSVc1WjdLbVVIOCtMZVJLT0NBVTh3Z2dGTE1Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWVrZTZPSW9WSkVnaVJzMitqeG9rZXpRREtta3dRUVlJS3dZQkJRVUhBUUVFTlRBek1ERUdDQ3NHQVFVRkJ6QUJoaVZvZEhSd09pOHZiMk56Y0M1aGNIQnNaUzVqYjIwdmIyTnpjREF6TFdGemFXTmhOREF6TUlHV0JnTlZIU0FFZ1k0d2dZc3dnWWdHQ1NxR1NJYjNZMlFGQVRCN01Ia0dDQ3NHQVFVRkJ3SUNNRzBNYTFSb2FYTWdZMlZ5ZEdsbWFXTmhkR1VnYVhNZ2RHOGdZbVVnZFhObFpDQmxlR05zZFhOcGRtVnNlU0JtYjNJZ1puVnVZM1JwYjI1eklHbHVkR1Z5Ym1Gc0lIUnZJRUZ3Y0d4bElGQnliMlIxWTNSeklHRnVaQzl2Y2lCQmNIQnNaU0J3Y205alpYTnpaWE11TUIwR0ExVWREZ1FXQkJSci8xMERrN3J4eGVLNDlBbzJ6TlJBaS9GOEhqQU9CZ05WSFE4QkFmOEVCQU1DQjRBd0R3WUpLb1pJaHZkalpBd1RCQUlGQURBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlCM3MyK1kxWmNFVEhWbk16dlNRQ2RTSzdVamVYMHgrM3g5VjFscm5qblMyUUloQU84VWZJUzVna1VsYXg0aFlYZm5kc3c4TUNPWDlxSUhBMEE2emhMeG5RMHRNWUlCMWpDQ0FkSUNBUUV3ZmpCeU1TWXdKQVlEVlFRRERCMUJjSEJzWlNCVGVYTjBaVzBnU1c1MFpXZHlZWFJwYjI0Z1EwRWdOREVtTUNRR0ExVUVDd3dkUVhCd2JHVWdRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEhreEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUQWdoY3JTWWtFeGdGdnpBTkJnbGdoa2dCWlFNRUFnRUZBS0NCNlRBWUJna3Foa2lHOXcwQkNRTXhDd1lKS29aSWh2Y05BUWNCTUJ3R0NTcUdTSWIzRFFFSkJURVBGdzB5TlRBeE1qSXdNekV5TkRsYU1Db0dDU3FHU0liM0RRRUpOREVkTUJzd0RRWUpZSVpJQVdVREJBSUJCUUNoQ2dZSUtvWkl6ajBFQXdJd0x3WUpLb1pJaHZjTkFRa0VNU0lFSUNqL2ZJam5zT0l6OXdFL05PUHk0VUNJeXFwTGpiQnJzdmNFTnZnbjdjRWRNRklHQ1NxR1NJYjNEUUVKRHpGRk1FTXdDZ1lJS29aSWh2Y05Bd2N3RGdZSUtvWklodmNOQXdJQ0FnQ0FNQTBHQ0NxR1NJYjNEUU1DQWdGQU1BY0dCU3NPQXdJSE1BMEdDQ3FHU0liM0RRTUNBZ0VvTUFvR0NDcUdTTTQ5QkFNQ0JFWXdSQUlnS1NBUzBJcmk3VVFWcWhGNWY3QTk5cFFwSnQzdDErcjJQaWdaL0FKSEJrMENJRGZ5T0s3Q2JPZkVKTDhnMit6UngxSWJaWDlTdWF0M3kzbjA2TEF3cnpxQjwvZGF0YT4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCgkJCTxrZXk+UFBRQ2hlY2s8L2tleT4KCTxmYWxzZS8+CgoJPGtleT5FbnRpdGxlbWVudHM8L2tleT4KCTxkaWN0PgoJCTxrZXk+YmV0YS1yZXBvcnRzLWFjdGl2ZTwva2V5PgoJCTx0cnVlLz4KCQkJCQoJCQkJPGtleT5hcHMtZW52aXJvbm1lbnQ8L2tleT4KCQk8c3RyaW5nPnByb2R1Y3Rpb248L3N0cmluZz4KCQkJCQoJCQkJPGtleT5jb20uYXBwbGUuZGV2ZWxvcGVyLm5ldHdvcmtpbmcuc2xpY2luZy5hcHBjYXRlZ29yeTwva2V5PgoJCTxhcnJheT4KCQkJCTxzdHJpbmc+Y29tbXVuaWNhdGlvbi05MDAwPC9zdHJpbmc+CgkJCQk8c3RyaW5nPmdhbWVzLTYwMTQ8L3N0cmluZz4KCQkJCTxzdHJpbmc+c3RyZWFtaW5nLTkwMDE8L3N0cmluZz4KCQk8L2FycmF5PgoJCQkJCgkJCQk8a2V5PmNvbS5hcHBsZS5kZXZlbG9wZXIubmV0d29ya2luZy53aWZpLWluZm88L2tleT4KCQk8dHJ1ZS8+CgkJCQkKCQkJCTxrZXk+Y29tLmFwcGxlLmRldmVsb3Blci5uZXR3b3JraW5nLnNsaWNpbmcudHJhZmZpY2NhdGVnb3J5PC9rZXk+CgkJPGFycmF5PgoJCQkJPHN0cmluZz5kZWZhdWx0c2xpY2UtMTwvc3RyaW5nPgoJCQkJPHN0cmluZz52aWRlby0yPC9zdHJpbmc+CgkJCQk8c3RyaW5nPmJhY2tncm91bmQtMzwvc3RyaW5nPgoJCQkJPHN0cmluZz52b2ljZS00PC9zdHJpbmc+CgkJCQk8c3RyaW5nPmNhbGxzaWduYWxpbmctNTwvc3RyaW5nPgoJCQkJPHN0cmluZz5yZXNwb25zaXZlZGF0YS02PC9zdHJpbmc+CgkJCQk8c3RyaW5nPmF2c3RyZWFtaW5nLTc8L3N0cmluZz4KCQkJCTxzdHJpbmc+cmVzcG9uc2l2ZWF2LTg8L3N0cmluZz4KCQk8L2FycmF5PgoJCQkJCgkJCQk8a2V5PmNvbS5hcHBsZS5kZXZlbG9wZXIuYXNzb2NpYXRlZC1kb21haW5zPC9rZXk+CgkJPHN0cmluZz4qPC9zdHJpbmc+CgkJCQkKCQkJCTxrZXk+YXBwbGljYXRpb24taWRlbnRpZmllcjwva2V5PgoJCTxzdHJpbmc+N0o0OTZaNDM1Ni5jb20udW5yZXN0cmFpbi42Njc3PC9zdHJpbmc+CgkJCQkKCQkJCTxrZXk+a2V5Y2hhaW4tYWNjZXNzLWdyb3Vwczwva2V5PgoJCTxhcnJheT4KCQkJCTxzdHJpbmc+N0o0OTZaNDM1Ni4qPC9zdHJpbmc+CgkJCQk8c3RyaW5nPmNvbS5hcHBsZS50b2tlbjwvc3RyaW5nPgoJCTwvYXJyYXk+CgkJCQkKCQkJCTxrZXk+Z2V0LXRhc2stYWxsb3c8L2tleT4KCQk8ZmFsc2UvPgoJCQkJCgkJCQk8a2V5PmNvbS5hcHBsZS5kZXZlbG9wZXIudGVhbS1pZGVudGlmaWVyPC9rZXk+CgkJPHN0cmluZz43SjQ5Nlo0MzU2PC9z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



          keychain-password: 111111

      # # 添加检查步骤
      # - name: 检查构建文件
      #   run: |
      #     echo "检查 build/ios/ipa 目录内容："
      #     ls -la build/ios/ipa/
      #     echo "检查 build/ios 目录内容："
      #     ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa
          
#      - name: Check IPA Path
#        run: |
#          echo "=================== IPA Location Check ==================="
#          echo "Checking build/ios directory:"
#          ls -R build/ios/
#          
#          echo "\nChecking for IPA files in build directory:"
#          find build -name "*.ipa" -type f
#          
#          echo "\nChecking specific paths:"
#          for path in \
#            "build/ios/ipa" \
#            "build/ios/archive/Runner.xcarchive/Products/Applications" \
#            "build/ios/Release-iphoneos"
#          do
#            echo "\nChecking $path:"
#            if [ -d "$path" ]; then
#              ls -la "$path"
#            else
#              echo "Directory does not exist: $path"
#            fi
#          done

          
      # - name: Upload using iTMSTransporter
      #   env:
      #     WORKING_DIRECTORY: build/ios/ipa
      #     IPA_FILE_NAME: oiyo.ipa
      #     APPLE_USERNAME: Nina2000HH@outlook.com
      #     APPLE_PASSWORD: zeqo-kyio-mlkw-kbwf
      #     APPLE_ASC_PROVIDER: 798RL7J5U7
      #   run: |
      #     cd $WORKING_DIRECTORY
      #     git clone https://github.com/ZhangLi1984/itsm.git
      #     ./itsm/bin/iTMSTransporter -assetFile $IPA_FILE_NAME -u $APPLE_USERNAME -p $APPLE_PASSWORD -m upload -asc_provider $APPLE_ASC_PROVIDER -v verbose

      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/loyoo.ipa"
          APPLE_ID: "EdwardMelody8837@hotmail.com"
          APP_SPECIFIC_PASSWORD: "eoqf-vfwl-dbca-rmys"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose

#      - name: Upload to App Store using altool
#        env:
#          APPLE_ID: "happym1224@163.com"
#          APP_SPECIFIC_PASSWORD: "twss-wqfs-vboc-esng"
#        run: |
#          # 首先找到 IPA 文件
#          IPA_PATH=$(find build -name "*.ipa" -type f | head -n 1)
#          
#          if [ -z "$IPA_PATH" ]; then
#            echo "Error: No IPA file found!"
#            exit 1
#          fi
#          
#          echo "Found IPA at: $IPA_PATH"
#          echo "IPA file details:"
#          ls -l "$IPA_PATH"
#          
#          echo "Attempting to upload IPA..."
#          xcrun altool --upload-app -f "$IPA_PATH" \
#            -t ios \
#            -u "$APPLE_ID" \
#            -p "$APP_SPECIFIC_PASSWORD" \
#            --verbose
