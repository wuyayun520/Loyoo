platform :ios, '13.0'
source 'https://github.com/CocoaPods/Specs.git'# 官方源

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Flutter root configuration
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!
  
  pod 'NetEaseLib', :path => 'NetEaseLib'
  
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  target 'pushNotifacation' do
#    inherit! :search_paths
    pod 'Firebase/Messaging', '~> 10.24.0'
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      # 基础设置
      config.build_settings.delete 'IPHONEOS_DEPLOYMENT_TARGET'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['SWIFT_VERSION'] = '5.0'
      
      # App Extension 设置
      if target.name == 'Runner_APN'
        config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'YES'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', 'APPLICATION_EXTENSION_API_ONLY=1']
      else
        config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
      end
      
#      # 继承 CocoaPods 的设置
#      config.build_settings['ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES'] = '$(inherited)'
#      config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = '$(inherited)'
      
      # 统一架构设置
#      problematic_pods = ['DXMarsXlog', 'Transfer', 'WithoutMTA', 'TXIMSDK_Plus_iOS_Bitcode']
#      if problematic_pods.include?(target.name)
#        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
#      else
#        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = ''
#      end
      
      # Swift 相关设置
#      config.build_settings['SWIFT_ACTIVE_COMPILATION_CONDITIONS'] = ['$(inherited)', 'DEBUG']
#      config.build_settings['OTHER_SWIFT_FLAGS'] = ['$(inherited)', '-D', 'DEBUG']
#      
      # 搜索路径设置
#      config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= ['$(inherited)']
#      config.build_settings['LIBRARY_SEARCH_PATHS'] ||= ['$(inherited)']
#      
      # 链接设置
#      config.build_settings['OTHER_LDFLAGS'] = ['$(inherited)', '-ObjC', '-framework', 'Foundation', '-framework', 'UIKit', '-framework', 'Security']
    end
  end
  
  # Bitcode 处理
  bitcode_strip_path = `xcrun --find bitcode_strip`.chop!
  def strip_bitcode_from_framework(bitcode_strip_path, framework_relative_path)
    framework_path = File.join(Dir.pwd, framework_relative_path)
    command = "#{bitcode_strip_path} #{framework_path} -r -o #{framework_path}"
    puts "Stripping bitcode: #{command}"
    system(command)
  end
  framework_paths = [
    "/Pods/TXIMSDK_Plus_iOS_Bitcode/ImSDK_Plus.framework/ImSDK_Plus",
  ]
  framework_paths.each do |framework_relative_path|
    strip_bitcode_from_framework(bitcode_strip_path, framework_relative_path)
  end
end
